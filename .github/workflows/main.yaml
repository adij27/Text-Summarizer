name: workflow

on: 
  push:
    branches: 
      - main
    paths-ignore:
      - 'README.md'

permisssions:
  id-token: write
  contents: read

jobs:
  integration:
    name: continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code 
        uses: actions/checkout@v3

      - name: Lint code 
        uses: echo "Linting repository"

      - name: run unit tests
        run:  echo "Running unit tests"

  build-and-push-ecr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Utilities
        run: 
          sudo apt-get update
          sudo apt-get install -y jq unzip
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actins/amazon-ecr-login@v1

      - name: build, tag and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME}}
          IMAGE_TAG: latest
        run:
          # Build a docker container and 
          # push it to Amazon ECR so that it can be
          # deployed to ECS
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"


  Continuous Deployment:
    needs: build-and-push-ecr_Image
    runs-on: self-hosted
    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: login to Amazon ECR
        id : login-ecr
        uses: aws-actions/amazon-ecr-login@v1


      - name: Pull latest image
        run: |
          docker pull ${{secret.AWS_ECR_LOGIN_URL}}/${{secret.ECR_REPOSITORY_NAME }}: latest
          
      - name : step and remove container if running
        run: |
          docker ps -q  --filter "name-texts"| grep -q 'app' | awk '{print $1}' | xargs docker rm -f
    
      - name: Run Docker Image to serve users
        run: |
          docker run -d -p 8080:8080 --name=texts -e "AWS_ACCESS_KEY_ID"=${{secrets.AWS_ACCESS_KEY_ID}}
      - name: Clean previous images and containers
        run: |
          docker system prone -r